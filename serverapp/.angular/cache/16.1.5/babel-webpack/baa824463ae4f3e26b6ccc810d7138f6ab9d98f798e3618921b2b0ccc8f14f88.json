{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { catchError, map, of, startWith } from 'rxjs';\nimport { DataState } from './enum/data.state.enum';\nexport let AppComponent = class AppComponent {\n  constructor(serverService) {\n    this.serverService = serverService;\n    this.DataState = DataState;\n  }\n  ngOnInit() {\n    this.appState$ = this.serverService.server$.pipe(map(response => {\n      return {\n        dataState: DataState.LOADED_STATE,\n        appData: response,\n        error: ''\n      };\n    }), startWith({\n      dataState: DataState.LOADING_STATE,\n      error: ''\n    }), catchError(error => {\n      return of({\n        dataState: DataState.ERROR_STATE,\n        error\n      });\n    }));\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","catchError","map","of","startWith","DataState","AppComponent","constructor","serverService","ngOnInit","appState$","server$","pipe","response","dataState","LOADED_STATE","appData","error","LOADING_STATE","ERROR_STATE","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Works\\Spring Boot\\serverapp\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ServerService } from './service/server.service';\nimport { Observable, catchError, map, of, startWith } from 'rxjs';\nimport { AppState } from './interface/app-state';\nimport { DataState } from './enum/data.state.enum';\nimport { CustomResponse } from './interface/custom-response';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  appState$!: Observable<AppState<CustomResponse>>;\n  readonly DataState = DataState;\n  constructor(private serverService: ServerService) { }\n\n  ngOnInit(): void {\n    this.appState$ = this.serverService.server$\n      .pipe(\n        map(response => {\n          return { dataState: DataState.LOADED_STATE, appData: response, error: '' }\n        }),\n        startWith({ dataState: DataState.LOADING_STATE, error: ''}),\n        catchError((error: string) => {\n          return of({ dataState: DataState.ERROR_STATE, error })\n        })\n      )\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAAqBC,UAAU,EAAEC,GAAG,EAAEC,EAAE,EAAEC,SAAS,QAAQ,MAAM;AAEjE,SAASC,SAAS,QAAQ,wBAAwB;AAQ3C,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAGvBC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IADxB,KAAAH,SAAS,GAAGA,SAAS;EACsB;EAEpDI,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,aAAa,CAACG,OAAO,CACxCC,IAAI,CACHV,GAAG,CAACW,QAAQ,IAAG;MACb,OAAO;QAAEC,SAAS,EAAET,SAAS,CAACU,YAAY;QAAEC,OAAO,EAAEH,QAAQ;QAAEI,KAAK,EAAE;MAAE,CAAE;IAC5E,CAAC,CAAC,EACFb,SAAS,CAAC;MAAEU,SAAS,EAAET,SAAS,CAACa,aAAa;MAAED,KAAK,EAAE;IAAE,CAAC,CAAC,EAC3DhB,UAAU,CAAEgB,KAAa,IAAI;MAC3B,OAAOd,EAAE,CAAC;QAAEW,SAAS,EAAET,SAAS,CAACc,WAAW;QAAEF;MAAK,CAAE,CAAC;IACxD,CAAC,CAAC,CACH;EACL;CACD;AAjBYX,YAAY,GAAAc,UAAA,EALxBpB,SAAS,CAAC;EACTqB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACWjB,YAAY,CAiBxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}